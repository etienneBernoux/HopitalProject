/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;
import javax.swing.*;
import BBDspéc.Employe;
import Connection.ConnectionEce;
import Connection.*;
import DAO.DAO;
import DAO.EmployeDAO;
import BBDspéc.Batiment;
import DAO.Requete;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author travail
 */
public class PanelMajFinal extends javax.swing.JPanel {

    private String requeteChoisie = "0";
    private ConnectionEce conn1;//= new ConnectionEce("0","","",""); //erreur
    private ArrayList tabVal = new ArrayList();
    private Object MAJTableau[] ;
    private JTable leTableau = new JTable();
    
    private EmployeDAO retourEmployeAll = new EmployeDAO(ConnectionEce.getConn());
    
    public PanelMajFinal(ConnectionEce connIN) {
        initComponents();
        conn1 = connIN; 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();

        jLabel1.setText("1 bouton lancement.");

        jButton1.setText("MAJ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Requetes 1 à 10, parmis celles du DAO dans la classe requête ");

        jLabel3.setText("Affiche le résultat de la requête dans le tableau");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Requête à choisir", "Requête 1", "Requête 2", "Requête 3", "Requête 4", "Requête 5", "Requête 6", "Requête 7", "Requête 8", "Requête 9", "Requête 10" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton2.setText("Enregistrer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2)
                            .addComponent(jLabel3))))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(5, 5, 5)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addContainerGap(354, Short.MAX_VALUE))
        );
    }// </editor-fold>                        

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {                                           
    requeteChoisie =  (String)jComboBox1.getSelectedItem(); 
    
    
    //JScrollPane scrollPane = new JScrollPane(jTable1);

    //Recupère le String de la requête choisie.
// TODO add your handling code here:
    }                                          

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
    /*OBJECTIF:
      Selon la requête, remplir un ArrayList tabVal. 
        Il permettra de remplir un tableauModel de l'interface.
        arrayList length();
        */ 
      //layout.add(new JScrollPane(jTable1));
      
    System.out.println("La requète choisie est "+ requeteChoisie);
    
    if("Requête 1".equals(requeteChoisie))//pour employé
        {
          //Test de sortie
           // System.out.println("ON VA Y ARRIVER !!! 11111");
            
 
//réception des valeurs de la table
            ArrayList<Employe> tabVal1 = retourEmployeAll.findall();
           //Test de sortie 
          // System.out.println("ON VA Y ARRIVER !!! 22222");
           //entetes du tableau
           String[] entetes = { "No employé","Nom", "Prénom", "Tel", "Adresse" };
           //mise en place du Model du tableau
           DefaultTableModel tableModel = new DefaultTableModel(entetes, 0);
           //allocation de MAJTableau=> stockage pour utilisation future
           System.out.println("BOUUUU "+tabVal1.size());
          
           MAJTableau = new Object[tabVal1.size()];
           
         
           //remplissage des data => objectTab          
           for(int i = 0; i<tabVal1.size();i++)
           {
                Employe emp = new Employe();
                emp =(Employe) tabVal1.get(i);
                Object objectTab[]= { //objectTab permet de remplir le JTable
                emp.getNo_employe(),
                emp.getNom(),
                emp.getPrenom(),
                emp.getTel(),
                emp.getAdresse()
                 };
               MAJTableau[i]=  objectTab; 
                tableModel.addRow(objectTab);
           }              
        //permet de changer le model du tableau  
        leTableau.setModel(tableModel);
        //Ajout du scrollPane dans le JPanel
        JScrollPane scrollPane11 = new JScrollPane(leTableau);
        this.add(scrollPane11);  
        scrollPane11.setBounds(50,180,1100,500);
       
        //Test de sortie
        System.out.println("C'est le find all employé !!! BRAVO e3lik!");  
        
        //Fermeture du connection =>  à mettre dans un bouton.
       /* try {
                conn1.fermerConnection();
                //C'est le cas, mais ils sont complètement dans le désordre. 
             } catch (SQLException ex) {
                Logger.getLogger(PanelRequete.class.getName()).log(Level.SEVERE, null, ex);
                 }*/
        
        tableModel.addTableModelListener( new TableModelListener(){
                @Override
                public void tableChanged(TableModelEvent e) {
                   // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                    updateFonction();
                }
       });
    }    
    }                                        

    public void updateFonction()
    {
        //créer l'objet Employe à envoyer pour l'update
    Employe MAJEmployRecu = new Employe();  
       //regarde là où l'utilisateur effectue la modification dans le tableau
       int ligne = leTableau.getSelectedRow();//Si tu veut la cellule selectionnée, sinon une autre valeur
       int colonne = leTableau.getSelectedColumn();//Si tu veut la cellule selectionnée, sinon une autre valeur
       Object cellule = leTableau.getValueAt(ligne,colonne);
       String currentVal = (String)cellule;
       //"No employé","Nom", "Prénom", "Tel", "Adresse":=> 5 colonnes
       
    //enregistre les informations de l'employe de la ligne où l'utilisateur  
    //effectue des modifications

       int curNo = (Integer)leTableau.getValueAt(ligne,0); //d'abord le N°
       MAJEmployRecu.setNo_employe(curNo);
       //puis les autres attributs String
       for(int i=1; i<5;i++)
       { 
           String curVal= (String)leTableau.getValueAt(ligne,i);
           switch(i)
           {
           case 1: MAJEmployRecu.setNom(curVal);    break;
           case 2: MAJEmployRecu.setPrenom(curVal); break;
           case 3: MAJEmployRecu.setTel(curVal);    break;
           case 4: MAJEmployRecu.setAdresse(curVal);break;
           default : break;
            }  
       }
       //le programme regarde dans quelle colonne est effectuée la modification
       //en fonction, il détermine quel attribut a changé
       //et l'enregistre dans l'employé correspondant
       switch(colonne){
           case 0: MAJEmployRecu.setNo_employe(Integer.parseInt(currentVal));break;
           case 1: MAJEmployRecu.setNom(currentVal);    break;
           case 2: MAJEmployRecu.setPrenom(currentVal); break;
           case 3: MAJEmployRecu.setTel(currentVal);    break;
           case 4: MAJEmployRecu.setAdresse(currentVal);break;
           default : break;       
       }
      //l'instance modifiée de la classe Employé et ensuite envoyée pour update
       retourEmployeAll.update(MAJEmployRecu);
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
  //Mise à jour en direct des modifications du tableau => dans la base de données, via EmployeeDAO update
      
        
        
        
    }                                        

    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration                   
}

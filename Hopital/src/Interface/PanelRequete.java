/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Connection.ConnectionEce;
import DAO.Requete;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.lang.reflect.Method;
import java.lang.reflect.InvocationTargetException;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import Utilitaire.TableCellListener;
import java.beans.PropertyChangeListener;
import java.sql.Connection;
import javax.swing.AbstractAction;
import javax.swing.Action;

/**
 *
 * @author travail
 */
public class PanelRequete extends javax.swing.JPanel {
    private Connection connect = null;
    /**
     * Creates new form PanelRequete
     */
    public PanelRequete(Connection connect) {
        this.connect = connect;
        initComponents();
        init();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        jLabel1.setText("1 bouton lancement.");

        jButton1.setText("MAJ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(dtm);
        jTable1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTable1ComponentAdded(evt);
            }
        });
        jTable1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTable1MouseMoved(evt);
            }
        });
        jTable1.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTable1InputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel3.setText("Affiche le résultat de la requête dans le tableau");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 586, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(102, 102, 102)
                        .addComponent(jLabel3)))
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(45, 45, 45)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 318, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Object src = evt.getSource();
            if (src == jButton1) {
             MAJ_launch();
             } 
    }//GEN-LAST:event_jButton1ActionPerformed
// React when you start writing stuff
    private void jTable1ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable1ComponentAdded
    }//GEN-LAST:event_jTable1ComponentAdded

    private void jTable1InputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTable1InputMethodTextChanged
    }//GEN-LAST:event_jTable1InputMethodTextChanged
// React when the mouse is on the table
    private void jTable1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseMoved
    }//GEN-LAST:event_jTable1MouseMoved

    private ArrayList<ArrayList>The_answer;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel dtm = new DefaultTableModel(0,0) ;
      private void init()
      {
          // Init the ComboBox
        Requete queries = new Requete(this.connect);
        String BufferList[] = queries.ListOfQuery();
        for (int i=0;i<queries.ListOfQuery().length;i++) {
            this.jComboBox1.addItem(BufferList[i]);
        }  
//        this.dtm.addTableModelListener((TableModelEvent tme) -> {
//            if(tme.getType() == TableModelEvent.UPDATE){
//                int a = tme.getLastRow();
//                int b = tme.getColumn();
//                String valueChanged = jTable1.getValueAt(a, b).toString();
//                System.out.println(valueChanged);
//                System.out.println("shloud be printed");}
//            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//        }); 
            Action action = new AbstractAction()
            {
                public void actionPerformed(ActionEvent e)
                {
                    TableCellListener tcl = (TableCellListener)e.getSource();
                    System.out.println("Row   : " + tcl.getRow());
                    System.out.println("Column: " + tcl.getColumn());
                    System.out.println("Old   : " + tcl.getOldValue());
                    System.out.println("New   : " + tcl.getNewValue());
                }
            };

        TableCellListener tcl = new TableCellListener(this.jTable1, action);
        
        this.jTable1.setModel(this.dtm);
        
      } 
      
      private void init_erase_tab()
      {
          int no_selection =-1;
          DefaultTableModel dtm = new DefaultTableModel(0,0);
          String Header[] = null;
          // we init the tab
          Header[0]= "Here we be display the result";
          dtm.setColumnIdentifiers(Header);
          this.jTable1.setModel(dtm);               
      }
      
      private void MAJ_launch() 
      {
          int index_sel;
          if ( this.jComboBox1.getSelectedIndex() != -1) {
              // we launch the query selected
              index_sel = this.jComboBox1.getSelectedIndex();
              display_query(index_sel+1);
          }
          else{
              // nothing selected
              JOptionPane.showMessageDialog(null, "You must select a query", "InfoBox: " + "Nothing Selected", JOptionPane.INFORMATION_MESSAGE);
          }
      }
      // wery not sure!!! will it work ?
      private void display_query(int index) 
      {
        
            DefaultTableModel dtm = new DefaultTableModel(0,0);
            String Header[] = null;
            Requete requete = new Requete(ConnectionEce.getConn());
            this.The_answer = null;
            //Method method = null;
            Object obj = requete;
            java.lang.reflect.Method method = null;
            try {
                method = obj.getClass().getMethod("Requete"+ index);
                } catch (SecurityException | NoSuchMethodException e) {
                // ...
                }
        try {
            this.The_answer = (ArrayList<ArrayList>)method.invoke(requete);
            /////////////////////////////////////////
            /////////////////////////////////////////
            
            // we will need to modify the tab to fit !
        } catch (IllegalAccessException ex) {
            Logger.getLogger(PanelRequete.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalArgumentException ex) {
            Logger.getLogger(PanelRequete.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InvocationTargetException ex) {
            Logger.getLogger(PanelRequete.class.getName()).log(Level.SEVERE, null, ex);
        }
            
            
            dtm.setColumnIdentifiers(this.The_answer.get(0).toArray());
            // we fill the Tab 
            for(int i=1;i<this.The_answer.size();i++)
            {
                dtm.addRow(this.The_answer.get(i).toArray());
            }
            this.jTable1.setModel(dtm); 
        
      } 
      public void tableChanged( TableModelEvent e ) {
		this.dtm =  (DefaultTableModel)e.getSource();
		int row = e.getFirstRow();
		int column = e.getColumn();

		String cellValue = String.valueOf( this.jTable1.getValueAt(row, column) );

		JOptionPane.showMessageDialog(this,
			"Value at (" + row + "," + column + ") changed to " + "\'" + cellValue + "\'");
	}
      
      private void lets_update()
      {}
}
